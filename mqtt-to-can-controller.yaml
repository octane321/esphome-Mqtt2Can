#       ToDo
 # DONE
  #   DONE - reset button
  #   DONE - debuginfos for VIS
  #   DONE - SoC , current, voltage von shunt
  #   DONE - take max current from BMS 
    # TESTING
      # safe old values persistent
      # discharging_a is not set to discharging_current from BMS (-5%)
        # else id(discharging_a) = id(discharging_current).state; //${discharge_a};
      # disable discharging if SoC is lower than  "min_discharge_soc" (macht das sinn? z.B. bei Stromausfall?)

  # NEEDS DEVELOPMENT
  #   Value sorting webserver
  #   send values only on change mqtt
  #   temp sensors (<10° use min / >=10 - 35° use avg / >35° use max)
  #   correct voltages (sliders)
  #   make some values dynamic and changeable: loglevel, CAN Protocol, CAN Name
  #   let discharging disabled until reaching restart SOC Value or Restart Voltage
  
 
#   INFOS
  # https://github.com/esphome/esphome/discussions/4418

# JK-BMS-CAN ( PYLON, Seplos, GoodWe, SMA and Victron CAN bus protocol )

# esp32_ble_jk-bms-can.yaml is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>.

# V1.17.3 Sleeper85 : Renumbering cells, Added “JK-BMS ESP32 Restart” switch, adding Total Daily Energy sensors, set jk_bms update interval to 3s, set default log level to INFO, improvement of comments
# V1.17.2 MrPablo   : Added function "Auto Charge/Discharge Current Control" to avoid OVP/UVP alarms
# V1.17.1 Sleeper85 : New Cut-Off Current/Voltage Charging Logic for LFP with the participation of @shvmm
# V1.16.6 Sleeper85 : Selectable CAN settings + Adding inverter_offset_v + Improved CAN ID 0x355, sending 100% only at the end of the absorption phase, adding bytes [04:05] and [06:07] + Automatic calculation of the number of battery modules + Save and Restore slider values
# V1.16.5 Sleeper85 : Add Preventive Alarms Logic, CAN ID 0x356: send average temperature of T1/T2, new "Discharging current max" and "Balancing current max" slider
# V1.16.4 Sleeper85 : Improved Charging Logic for ESP32 startup/reboot and Float charge, Add CAN ID 0x356 bytes [06:07] cycles for Sofar, Change switch name
# V1.16.3 Sleeper85 : ID 0x379 will be sent when choosing protocol 2 or 4 (Battery Capacity for Victron, Sol-Ark and Luxpower)
# V1.16.2 Sleeper85 : Split the "Charge/Discharge values" section and added instructions for "Stop Discharging" + Set "esp-idf" framework by default
# V1.16.1 Sleeper85 : Slider charging_current max value = ${charge_a}, Improved Alarm/Charging/Discharging Logic, Improved CAN protocol and Victron support
# V1.15.5 Sleeper85 : Improved code and set api "reboot_timout" to "0s" by default (no reboot without HA)
# V1.15.4 Sleeper85 : Improved documentation for API, Web Server and WiFi settings
# V1.15.3 Sleeper85 : Add 'CAN Protocol Settings' and new CAN ID based on the SMA and Victron protocol (alpha)
# V1.15.2 Sleeper85 : Improved Alarm handling, all alarms will set charge/discharge current to 0A and set 'Charging Status' to Alarm
# V1.15.1 Sleeper85 : New CANBUS script with CANBUS Status in HA, stop sending CAN messages if the inverter is not responding (fix WDT reboot issues)
# V1.14.3 Sleeper85 : Improved documentation + Charging Voltage tips for Deye
# V1.14.2 Sleeper85 : Improve 'Charging Voltage' behavior
# V1.14.1 Sleeper85 : Add 'Float charge function'
# V1.13.6 Sleeper85 : Add 'Absorption time' and 'Absorption Offset V.' slider
# V1.13.5 Sleeper85 : Set CAN manufacter to "PYLON" for improve compatibility with Deye and other inverters
# V1.13.4 Sleeper85 : Improve 'Charge Status' behavior + add 'Rebulk Offset V.' slider
# V1.13.3 uksa007   : Improve compatibility with Deye and other inverters
# V1.13.2 uksa007   : Send Max Temperature of T1, T2 to inverter
# V1.13.1 uksa007   : Fix compile issues with new version of ESPhome 2023.4.0, set rebulk offset to 2.5


packages:
  # INCLUDE basics
  esp_basics: !include            common/esp_basics.yaml
  wifi: !include                  common/wifi.yaml
  mqtt: !include                  common/mqtt.yaml

  # INCLUDE logic part
  logic: !include                 custom/mqtt-to-can-controller/logic.yaml
  # INCLUDE device SmartShunt
  sensors_shunt: !include         custom/mqtt-to-can-controller/sensors_shunt.yaml
  # INCLUDE some global sensors
  sensors_global: !include        
    file:                       custom/mqtt-to-can-controller/sensors_global.yaml
    vars:
      bms: '1'                                                                                              # the the number of cells from selected bms will be used to determine "Auto Charge Current Control"
  # INCLUDE BMS devices
  bms1_sensors: !include
    file:                      custom/mqtt-to-can-controller/sensors_jk_bms.yaml
    vars:
      bms:                      '1'
  bms2_sensors: !include
    file:                      custom/mqtt-to-can-controller/sensors_jk_bms.yaml
    vars:
      bms:                      '2'
  bms3_sensors: !include
    file:                      custom/mqtt-to-can-controller/sensors_jk_bms.yaml
    vars:
      bms:                      '3'

  # INCLUDE logic to combine all BMS data into one virtual "bms0"
  sensors_combine: !include
   file:                      custom/mqtt-to-can-controller/combine.yaml
   vars:
     bms:                      '0'

substitutions:
# +--------------------------------------+
  # name that will appear in esphome and homeassistant.
  name: mqtt-to-can-controller
# +--------------------------------------+
# | Bluetooth Settings                   |
# +--------------------------------------+
  # Please use "JK02_24S" if you own a old JK-BMS < hardware version 11.0 (hardware version >= 6.0 and < 11.0)
  # Please use "JK02_32S" if you own a new JK-BMS >= hardware version 11.0 (f.e. JK-B2A8S20P hw 11.XW, sw 11.26)
  # Please use "JK04" if you have some old JK-BMS <= hardware version 3.0 (f.e. JK-B2A16S hw 3.0, sw. 3.3.0)
  # protocol_version: JK02_32S
  # mac_address: C8:47:8C:10:7E:AB
# +--------------------------------------+
# | Battery Charge Settings              |
# +--------------------------------------+
  # This is max charging amps eg 100A, for Bulk - Constant Current charging(CC), should be at least 10A less than BMS change current protection, 0.5C max
  # 100A * 50V = 5000W
  charge_a: "150"
  # Float Voltage : corresponds to the voltage at which the battery would be maintained at the end of the absorption phase. (53.6v eg 3.35v/cell for 16 cells 48V battery)
  float_v: "54.0"
  # Bulk / Absorption Voltage : corresponds to the Bulk voltage that will be used to charge the battery. (55.2v eg 3.45v/cell for 16 cells 48V battery)
  bulk_v: "55.0" #absorption_v

  # Rebulk voltage, voltage less than FLOAT at which BMS requests rebulk. (52.8V = 3.3V/Cell for 16S battery)
  rebulk_v: "53.0"
        # Rebulk offset, x Volts below absorption voltage battery will request rebulk, eg 55.2-2.4 = 52.8V (3.3V/cell)
        #rebulk_offset_v: "2.0"

  # +--------------------------------------+
  # | Use the settings below with caution  |
  # +--------------------------------------+
  # Inverter offset, allows you to correct the inverter charging voltage
  # For example, with my Deye, if the requested charging voltage is 55.2v the Deye effective charging voltage will be 55.1v
  # An offset of 0.1 provides an effective charging voltage of 55.2v
  inverter_offset_v: "0.0"
  # Auto charge current control will automatically reduce the charging current as a cell reaches the BMS "cell_voltage_overvoltage_recovery".
  # If unsure, leave the below settings as default, this will ensure charge current will taper correctly.
  # Factor to control the end of the charge current curve. A setting below 2 will extend the curve, above 2 will shorten the curve. 
  charge_a_factor_curve_end: "2.0"
  # Factor to adjust the shape of the charge current curve.
  # A setting below 1 will reduce current at a slow rate after the float voltage is reached, then increase as a cell reaches the BMS "cell_voltage_overvoltage_recovery".
  # A factor above 1 will reduce current at a fast rate after the float voltage is reached, then slow as a cell reaches the BMS "cell_voltage_overvoltage_recovery".
  charge_a_factor_curve_shape: "1.8"
# +--------------------------------------+
# | Battery Discharge Settings           |
# +--------------------------------------+
  # Max discharge amps eg 120, should be at least 10A less than BMS over discharge current protection, 0.5C max
  # 120A * 50V = 6000W
  discharge_a: "150"
  # Minimum discharge voltage eg 48v/16 = 3V per cell
  min_discharge_v: "48"
  # Minimum discharge State of Charge
  min_discharge_soc: "10"

  # +--------------------------------------+
  # | Use the settings below with caution  |
  # +--------------------------------------+
  # Auto discharge current control will automatically reduce the charging current as a cell reaches the BMS "cell_voltage_undervoltage_recovery".
  # If unsure, leave the below settings as default, this will ensure discharge current will taper correctly.
  # Factor to control the end of the discharge current curve. A setting below 2 will extend the curve, above 2 will shorten the curve. 
  discharge_a_factor_curve_end: "2.0"
  # Factor to adjust the shape of the charge current curve.
  # A setting below 1 will reduce current at a slow rate after the float voltage is reached, then increase as a cell reaches the BMS "cell_voltage_undervoltage_recovery".
  # A factor above 1 will reduce current at a fast rate after the float voltage is reached, then slow as a cell reaches the BMS "cell_voltage_undervoltage_recovery".
  discharge_a_factor_curve_shape: "1.8"
  # Discharge knee voltage, the point at which a cell will reduce in voltage more rapidly. For LiFePO4 cells, this is generally considered to be 3.1v.
  discharge_knee_v: "3.1"
# +--------------------------------------+
# | Battery State of Health (SOH)        |
# +--------------------------------------+
  # Maximum charging cycles is used to calculate the battey SOH, LF280K v3 =8000.0, LF280K v2 =6000.0, LF280=3000.0 (decimal is required)
  max_cycles: "6000.0"
# +--------------------------------------+
# | Preventive Alarms Logic              |
# +--------------------------------------+
  # Information from the EVE LF280K v2 cell datasheet
  # LFP Recommended Operating Temperature Range : 10~45°C
  # Number of cycles at 25°C : 6000
  # Number of cycles at 45°C : 2500
  # 60°C  : Never charging or discharging
  # 0°C   : Never charging
  # -30°C : Never discharging
  # +--------------------------------------+
  # High Temp Protection - Temp > OTP : Stop Charging and Discharging
  otp: "45.0"
  # Low Temp Protection  - Temp < UTP : Stop Charging
  utp: "1.0"
# +--------------------------------------+
# | ESP32 CAN port pins                  |
# +--------------------------------------+
  # GPIO pins your CAN bus transceiver (TJA1050, TJA1051T or SN65HVD230) is connected to the ESP, note! TX->TX and RX->RX. 
  can_tx_pin: GPIO23
  can_rx_pin: GPIO22

# +------------------------------------------------------------------+
# | ** The settings below can be modified according to your needs ** |
# +------------------------------------------------------------------+
  # external_components_source: github://syssi/esphome-jk-bms@main
  # components
  # github://syssi/esphome-jk-bms@main

# +--------------------------------------+
# | Custom Override Substitutions        |
# +--------------------------------------+
  device_description: "subscribes to mqtt and controls many Inverter via CAN Bus - https://github.com/Sleeper85/esphome-jk-bms-can"
  prefix: DEV                                                # the mqtt path will be like -> ${prefix}/${subtopic}
  subtopic: CAN_Controller
  mqtt_id: CAN_Controller
  ip: 192.168.1.181                                           # static IP of the ESP
  bms: '1'                                                    # dev fallback (not used when productive)

# +--------------------------------------+
# | esphome setup                        |
# +--------------------------------------+
esphome:
  name: ${name}
  comment: ${device_description}
  on_boot:
    priority: -100
    then:
      #- switch.turn_on: can_switch_charging
      #- switch.turn_on: can_switch_discharging
      #- switch.turn_on: can_switch_float
      #- switch.turn_on: can_switch_auto_charge_current
      #- switch.turn_on: can_switch_auto_discharge_current

  #   create command topics for Charge_Setup
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/01_Bulk_Voltage/set
          payload: " "
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/03_Float_Voltage/set
          payload: " "
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/04_Rebulk_Voltage/set
          payload: " "
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/09_Absorbtion_Offset/set
          payload: " "
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/10_Charge_Current_max/set
          payload: " "
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/11_Discharge_Current_max/set
          payload: " "
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/20_Charging_enabled/set
          payload: "on/off"
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/21_Discharging_enabled/set
          payload: "on/off"
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/22_Floatmode_enabled/set
          payload: "on/off"
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/23_Top_Balance_Override/set
          payload: "on/off"
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Charge_Current/set
          payload: "on/off"
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/90_Charge_Setup/25_Automatic_Discharge_Current/set
          payload: "on/off"
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/91_CAN_Setup/01_CAN_BMS_Name/set
          payload: "GENERAL:GENERAL;PYLON:PYLON;GOODWE:GOODWE;SEPLOS:SEPLOS"
      - mqtt.publish:
          topic: ${prefix}/${subtopic}/91_CAN_Setup/02_CAN_Protocol/set
          payload: "GENERAL:GENERAL;PYLON 1.2:PYLON 1.2;PYLON +:PYLON +;SMA:SMA;VICTRON:VICTRON"

# +--------------------------------------+
# | ESP32 settings                       |
# +--------------------------------------+
# For a stable Bluetooth connection keep the "esp-idf" framework
esp32:
  board: esp32doit-devkit-v1
  framework:
    type: esp-idf

# external_components:
  #   - source: ${external_components_source}
  #     refresh: 0s
    
logger:
  level: WARN

  # ota:                                                            #INCLUDED in wifi.yaml
  #   on_begin:
  #     then:
  #       - lambda: id(enable_bluetooth_connection).turn_off();
  #       - logger.log: "BLE shutdown for flashing"

# Please use the native `api` component instead of the `mqtt` section.
# If you use Home Assistant, the native API is more lightweight.
# If there is no HA server connected to this API, the ESP32 reboots every 15 minutes to try to resolve the problem.
# If you don't use Home Assistant please uncomment the "reboot_timeout: 0s" option.
#api:
  #reboot_timeout: 0s

# If you don't want to use ESPHome's native API you can use MQQT instead.
# In this case don't forget to remove the 'api:' section.
# mqtt:
#  broker: !secret mqtt_host
#  username: !secret mqtt_username
#  password: !secret mqtt_password
#  id: mqtt_client

# In the event of problems with the WiFi network, the ESP32 will reboot every 15 minutes to try to resolve the problem.
# If we don't want to connect the ESP32 to the WiFi network please remove the 4 lines below.
# wifi: included in wifi.yaml
#   ssid: !secret wifi_ssid
#   password: !secret wifi_password
#   domain: !secret domain

web_server:
  port: 80
  log: false
  ota: false

# +--------------------------------------+
# | ** Don't make changes below this **  |
# +--------------------------------------+

# globals:                                                                            --> MOVED TO sensors_global.yaml
  # - id: can_ack_counter
  #   type: int
  #   restore_value: no
  #   initial_value: '0'
  # - id: charge_status
  #   type: std::string
  #   restore_value: no
  #   initial_value: '"Wait"'
  # # - id: can_status #can_bus_status
  # #   type: std::string
  # #   restore_value: no
  # #   initial_value: '"OFF"'
  # - id: alarm_status
  #   type: std::string
  #   restore_value: no
  #   initial_value: '"NoAlarm"'
  # - id: charging_v
  #   type: float
  #   restore_value: no
  #   initial_value: '0.0'
  # - id: charging_a
  #   type: int
  #   restore_value: no
  #   initial_value: '0'
  # - id: discharging_a
  #   type: int
  #   restore_value: no
  #   initial_value: '0'
  # - id: can_msg_counter
  #   type: int
  #   restore_value: no
  #   initial_value: '0'
  # - id: eoc
  #   type: bool
  #   restore_value: no
  #   initial_value: "false"

output:
  - platform: gpio
    pin: 2
    id: led
    inverted: true

light:
  - platform: binary
    output: led
    id: blue_led
    name: "Blue LED"
    internal: true

# +--------------------------------------+
# | JK-BMS BLE connection                |
# +--------------------------------------+

# esp32_ble_tracker:
  # on_ble_advertise:
  #   then:
  #     - lambda: |-
  #         if (x.get_name().rfind("JK-", 0) == 0) {
  #           ESP_LOGI("ble_adv", "New JK-BMS found");
  #           ESP_LOGI("ble_adv", "  Name: %s", x.get_name().c_str());
  #           ESP_LOGI("ble_adv", "  MAC address: %s", x.address_str().c_str());
  #           ESP_LOGD("ble_adv", "  Advertised service UUIDs:");
  #           for (auto uuid : x.get_service_uuids()) {
  #             ESP_LOGD("ble_adv", "    - %s", uuid.to_string().c_str());
  #           }
  #         }

# ble_client:
  # - mac_address: ${mac_address}
  #   id: client0

# jk_bms_ble:
  # - ble_client_id: client0
  #   protocol_version: ${protocol_version}
  #   throttle: 5s
  #   id: bms0
  #   # enable_fake_traffic: true

# Enable time component to reset energy at midnight
  # time:
  #   - platform: homeassistant
  #     id: homeassistant_time

# +--------------------------------------+
# | Select CAN Protocol                  |
# +--------------------------------------+
# select:                                                                                                         --> MOVED TO sensors_global.yaml
  # - platform: template
  #   name: CAN BMS Name
  #   id: can_bms_name
  #   options:
  #     - "GENERAL"
  #     - "PYLON"
  #     - "GOODWE"
  #     - "SEPLOS"
  #   restore_value: true
  #   initial_option: "PYLON"
  #   optimistic: true
  #   set_action:
  #     - logger.log:
  #         format: "Chosen option: %s"
  #         args: ["x.c_str()"]
  #   state_topic: ${prefix}/${subtopic}/91_CAN_Setup/01_CAN_BMS_Name
  #   command_topic: ${prefix}/${subtopic}/91_CAN_Setup/01_CAN_BMS_Name/set           # GENERAL / PYLON / GOODWE / SEPLOS
  # - platform: template
  #   name: CAN Protocol
  #   id: can_protocol
  #   options:
  #     - "GENERAL"
  #     - "PYLON 1.2"
  #     - "PYLON +"
  #     - "SMA"
  #     - "VICTRON"
  #   restore_value: true
  #   initial_option: "PYLON +"
  #   optimistic: true
  #   set_action:
  #     - logger.log:
  #         format: "Chosen option: %s"
  #         args: ["x.c_str()"]
  #   state_topic: ${prefix}/${subtopic}/91_CAN_Setup/01_CAN_Protocol
  #   command_topic: ${prefix}/${subtopic}/91_CAN_Setup/01_CAN_Protocol/set           # GENERAL / PYLON 1.2 / PYLON + / SMA / VICTRON


# +--------------------------------------+
# | JK-BMS binary Sensors                |
# +--------------------------------------+
# binary_sensor:                                                    --> MOVED TO sensors_jk_bms.yaml
  # #balancing state
  # - platform: template
  #   name: "BMS 02_Balancing state"
  #   id: equalizing_state
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/02_Balancing
  # #charging state
  # - platform: template
  #   name: "BMS 03_Charge_MOS state"
  #   id: charging_state
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/03_Charge_MOS
  # #discharging state
  # - platform: template
  #   name: "BMS 04_Discharge_MOS state"
  #   id: discharging_state
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/04_Discharge_MOS
  #   # online_status:                #not needed (BLE-Status)
  #   #   name: "${name} Online Status"
  # #adapted from switch (can not be switched)
  # #charging switchstate
  # - platform: template
  #   name: "BMS 03_Charge_MOS switchstate"
  #   id: bms_switch_charging
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/03_Charge_MOS/01_Switch
  # #discharging switchstate
  # - platform: template
  #   name: "BMS 04_Discharge_MOS switchstate"
  #   id: bms_switch_discharging
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/04_Discharge_MOS/01_Switch
  # #balancing switchstate
  # - platform: template
  #   name: "BMS 02_Balancing switchstate"
  #   id: bms_switch_balancing
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/02_Balancing/01_Switch

# +--------------------------------------+
# | ESP binary Sensors                   |
# +--------------------------------------+
# - platform: template                                                                                          --> MOVED TO sensors_global.yaml
  # name: "ESP 08_CAN_Connection"
  # id: can_bus_status
  # state_topic: ${prefix}/${subtopic}/99_Info/08_CAN_Connection
# - platform: ble_client
  # ble_client_id: client0
  # id: enable_bluetooth_connection
  # name: "${name} Enable Bluetooth connection"

  # +--------------------------------------+
  # | CAN switch Components                |                                                                      --> adapted to switch
  # +--------------------------------------+
  # # CAN charging Switch
  # - platform: template
  #   name: "CAN 20_Charge enabled"
  #   id: can_switch_charging
  #   optimistic: true
  #   restore_mode: RESTORE_DEFAULT_ON
  #   state_topic: ${prefix}/${subtopic}/90_Charge_Setup/20_Charging_enabled
  #   command_topic: ${prefix}/${subtopic}/90_Charge_Setup/20_Charging_enabled/set
  # # CAN discharging Switch
  # - platform: template
  #   name: "CAN 21_Discharge enabled"
  #   id: can_switch_discharging
  #   optimistic: true
  #   restore_mode: RESTORE_DEFAULT_ON
  #   state_topic: ${prefix}/${subtopic}/90_Charge_Setup/21_Discharging_enabled
  #   command_topic: ${prefix}/${subtopic}/90_Charge_Setup/21_Discharging_enabled/set
  # # CAN Top Balance Override
  # - platform: template
  #   name: "CAN 23_Top_Balance_Override"
  #   id: can_switch_force_bulk
  #   optimistic: true
  #   restore_mode: RESTORE_DEFAULT_OFF
  #   state_topic: ${prefix}/${subtopic}/90_Charge_Setup/23_Top_Balance_Override
  #   command_topic: ${prefix}/${subtopic}/90_Charge_Setup/23_Top_Balance_Override/set
  # # CAN Floatmode enable
  # - platform: template
  #   name: "CAN 22_Floatmode_enabled"
  #   id: can_switch_float
  #   optimistic: true
  #   restore_mode: RESTORE_DEFAULT_ON
  #   state_topic: ${prefix}/${subtopic}/90_Charge_Setup/22_Floatmode_enabled
  #   command_topic: ${prefix}/${subtopic}/90_Charge_Setup/22_Floatmode_enabled/set
  # # CAN Automatic Charge Current
  # - platform: template
  #   name: CAN 24_Automatic Charge Current
  #   id: can_switch_auto_charge_current
  #   optimistic: true
  #   restore_mode: RESTORE_DEFAULT_ON
  #   state_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Charge_Current
  #   command_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Charge_Current/set
  # # CAN Automatic Discharge Current
  # - platform: template
  #   name: CAN 25_Automatic Discharge Current
  #   id: can_switch_auto_discharge_current
  #   optimistic: true
  #   restore_mode: RESTORE_DEFAULT_ON
  #   state_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Discharge_Current
  #   command_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Discharge_Current/set

  # - platform: restart               #INCLUDED in esp_basics.yaml
  #   name: "JK-BMS ESP32 Restart"

# +--------------------------------------+
# | JK-BMS Sensors                       |
# +--------------------------------------+
  # sensor:                                                                                   --> MOVED TO sensor_jk_bms.yaml

    #  ### adapted from number ####
    #   - platform: mqtt_subscribe
    #     name: "BMS 13_max_Charge_current"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/13_max_Charge_current
    #     accuracy_decimals: 0
    #     unit_of_measurement: A
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/98_BMS_Setup/13_max_Charge_current #charging_current
    #     on_raw_value:
    #       then:
    #         - lambda: |-
    #             if (x > 0) {
    #               id(charging_current).publish_state(round(x*0.95));
    #             } else {}

    #   - platform: mqtt_subscribe
    #     name: "BMS 14_max_Discharge_current"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/14_max_Discharge_current
    #     accuracy_decimals: 0
    #     unit_of_measurement: A
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/98_BMS_Setup/14_max_Discharge_current
    #     on_raw_value:
    #       then:
    #         - lambda: |-
    #             if (x > 0) {
    #               id(discharging_current).publish_state(round(x*0.95));
    #             } else {}


    #  ### adapted from sensor ####
    #   #min_cell_voltage
    #   - platform: mqtt_subscribe
    #     id: min_cell_voltage
    #     name: "BMS 25_Cell_min"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/01_Voltage/25_Cell_min
    #     filters:
    #       - delta: 0.0001
    #     accuracy_decimals: 3
    #     unit_of_measurement: V
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/01_Voltage/25_Cell_min

    #   #max_cell_voltage
    #   - platform: mqtt_subscribe
    #     id: max_cell_voltage
    #     name: "BMS 27_Cell_max"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/01_Voltage/27_Cell_max
    #     filters:
    #       - delta: 0.0001
    #     accuracy_decimals: 3
    #     unit_of_measurement: V
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/01_Voltage/27_Cell_max
    #     on_raw_value: 
    #       then:
    #         - lambda: !lambda |-
    #             id(auto_charge_current_initial).publish_state(x);

    #   #min_voltage_cell
    #   - platform: mqtt_subscribe
    #     id: min_voltage_cell
    #     name: "BMS 26_Cell_min_no"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/01_Voltage/26_Cell_min_no
    #     filters:
    #       - delta: 1
    #     accuracy_decimals: 0
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/01_Voltage/26_Cell_min_no
    #     on_raw_value: 
    #       then:
    #         - lambda: !lambda |-
    #             id(auto_discharge_current_initial).publish_state(x);

    #   ##max_voltage_cell
    #   - platform: mqtt_subscribe
    #     id: max_voltage_cell
    #     name: "BMS 28_Cell_max_no"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/01_Voltage/28_Cell_max_no
    #     filters:
    #       - delta: 1
    #     accuracy_decimals: 0
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/01_Voltage/28_Cell_max_no

    #     #     delta_cell_voltage:
    #     #       id: delta_cell_voltage
    #     #       name: "${name} delta cell voltage"
    #     #     average_cell_voltage:
    #     #       name: "${name} average cell voltage"
    #     #     cell_voltage_1:
    #     #       name: "${name} cell voltage 01"
    #     #     cell_voltage_2:
    #     #       name: "${name} cell voltage 02"
    #     #     cell_voltage_3:
    #     #       name: "${name} cell voltage 03"
    #     #     cell_voltage_4:
    #     #       name: "${name} cell voltage 04"
    #     #     cell_voltage_5:
    #     #       name: "${name} cell voltage 05"
    #     #     cell_voltage_6:
    #     #       name: "${name} cell voltage 06"
    #     #     cell_voltage_7:
    #     #       name: "${name} cell voltage 07"
    #     #     cell_voltage_8:
    #     #       name: "${name} cell voltage 08"
    #     #     cell_voltage_9:
    #     #       name: "${name} cell voltage 09"
    #     #     cell_voltage_10:
    #     #       name: "${name} cell voltage 10"
    #     #     cell_voltage_11:
    #     #       name: "${name} cell voltage 11"
    #     #     cell_voltage_12:
    #     #       name: "${name} cell voltage 12"
    #     #     cell_voltage_13:
    #     #       name: "${name} cell voltage 13"
    #     #     cell_voltage_14:
    #     #       name: "${name} cell voltage 14"
    #     #     cell_voltage_15:
    #     #       name: "${name} cell voltage 15"
    #     #     cell_voltage_16:
    #     #       name: "${name} cell voltage 16"
    #     # #    cell_voltage_17:
    #     # #      name: "${name} cell voltage 17"
    #     # #    cell_voltage_18:
    #     # #      name: "${name} cell voltage 18"
    #     # #    cell_voltage_19:
    #     # #      name: "${name} cell voltage 19"
    #     # #    cell_voltage_20:
    #     # #      name: "${name} cell voltage 20"
    #     # #    cell_voltage_21:
    #     # #      name: "${name} cell voltage 21"
    #     # #    cell_voltage_22:
    #     # #      name: "${name} cell voltage 22"
    #     # #    cell_voltage_23:
    #     # #      name: "${name} cell voltage 23"
    #     # #    cell_voltage_24:
    #     # #      name: "${name} cell voltage 24"
    #     #     cell_resistance_1:
    #     #       name: "${name} cell resistance 01"
    #     #     cell_resistance_2:
    #     #       name: "${name} cell resistance 02"
    #     #     cell_resistance_3:
    #     #       name: "${name} cell resistance 03"
    #     #     cell_resistance_4:
    #     #       name: "${name} cell resistance 04"
    #     #     cell_resistance_5:
    #     #       name: "${name} cell resistance 05"
    #     #     cell_resistance_6:
    #     #       name: "${name} cell resistance 06"
    #     #     cell_resistance_7:
    #     #       name: "${name} cell resistance 07"
    #     #     cell_resistance_8:
    #     #       name: "${name} cell resistance 08"
    #     #     cell_resistance_9:
    #     #       name: "${name} cell resistance 09"
    #     #     cell_resistance_10:
    #     #       name: "${name} cell resistance 10"
    #     #     cell_resistance_11:
    #     #       name: "${name} cell resistance 11"
    #     #     cell_resistance_12:
    #     #       name: "${name} cell resistance 12"
    #     #     cell_resistance_13:
    #     #       name: "${name} cell resistance 13"
    #     #     cell_resistance_14:
    #     #       name: "${name} cell resistance 14"
    #     #     cell_resistance_15:
    #     #       name: "${name} cell resistance 15"
    #     #     cell_resistance_16:
    #     #       name: "${name} cell resistance 16"
    #     # #    cell_resistance_17:
    #     # #      name: "${name} cell resistance 17"
    #     # #    cell_resistance_18:
    #     # #      name: "${name} cell resistance 18"
    #     # #    cell_resistance_19:
    #     # #      name: "${name} cell resistance 19"
    #     # #    cell_resistance_20:
    #     # #      name: "${name} cell resistance 20"
    #     # #    cell_resistance_21:
    #     # #      name: "${name} cell resistance 21"
    #     # #    cell_resistance_22:
    #     # #      name: "${name} cell resistance 22"
    #     # #    cell_resistance_23:
    #     # #      name: "${name} cell resistance 23"
    #     # #    cell_resistance_24:
    #     # #      name: "${name} cell resistance 24"

    #   #total_voltage
    #   - platform: mqtt_subscribe
    #     name: "BMS 01_Voltage_shunt"
    #     id: total_voltage #_shunt
    #     topic: PV/SmartShunt/1_Battery/0_Voltage
    #     accuracy_decimals: 2
    #     unit_of_measurement: V
    #     state_topic: ${prefix}/${subtopic}/00_SmartShunt/01_Voltage
    #     filters:
    #       - throttle: 1s
    #       #- debounce: 0.5s
    #       - delta: 0.01

    #   #total_voltage_bms
    #   - platform: mqtt_subscribe
    #     id: total_voltage_bms
    #     name: "BMS 01_Voltage"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/01_Voltage
    #     accuracy_decimals: 2
    #     unit_of_measurement: V
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/01_Voltage

    #   #current
    #   - platform: mqtt_subscribe
    #     name: "BMS 03_Current_shunt"
    #     id: current #_shunt
    #     topic: PV/SmartShunt/1_Battery/2_Current
    #     accuracy_decimals: 2
    #     unit_of_measurement: A
    #     filters:
    #       - throttle: 1s
    #       #- debounce: 0.5s
    #       - delta: 0.1
    #     state_topic: ${prefix}/${subtopic}/00_SmartShunt/06_Current

    #   #current_bms
    #   - platform: mqtt_subscribe
    #     id: current_bms
    #     name: "BMS 03_Current"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/03_Current
    #     accuracy_decimals: 2
    #     unit_of_measurement: A
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/03_Current

    #   #power
    #   - platform: mqtt_subscribe
    #     id: power
    #     name: "BMS Power Shunt"
    #     topic: PV/SmartShunt/1_Battery/3_Power
    #     state_topic: ${prefix}/${subtopic}/00_SmartShunt/02_Power
    #   - platform: mqtt_subscribe
    #     id: power_bms
    #     name: "BMS Power"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/02_Power
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/02_Power

    #   # charging_power
    #   # charging_power:
    #   #   id: charging_power
    #   #   name: "${name} charging power"
    #   # discharging_power
    #   # discharging_power:
    #   #   id: discharging_power
    #   #   name: "${name} discharging power"

    #   #temperature_sensor_1
    #   - platform: mqtt_subscribe
    #     id: temperature_sensor_1
    #     name: "BMS temperature 01_Cells_left"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/05_Temperatures/01_Cells_left
    #     filters:
    #       - delta: 0.1
    #     unit_of_measurement: °C
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/05_Temperatures/01_Cells_left
    #   #temperature_sensor_2
    #   - platform: mqtt_subscribe
    #     id: temperature_sensor_2
    #     name: "BMS temperature 02_Cells_right"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/05_Temperatures/02_Cells_right
    #     filters:
    #       - delta: 0.1
    #     unit_of_measurement: °C
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/05_Temperatures/02_Cells_right
    #   #power_tube_temperature
    #   - platform: mqtt_subscribe
    #     id: power_tube_temperature
    #     name: "BMS temperature 03_Mosfets"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/05_Temperatures/03_Mosfets
    #     filters:
    #       - delta: 0.1
    #     unit_of_measurement: °C
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/05_Temperatures/03_Mosfets

    #   #state_of_charge
    #   - platform: mqtt_subscribe
    #     name: "BMS 04_SoC_shunt"
    #     id: state_of_charge #_shunt
    #     topic: PV/SmartShunt/1_Battery/1_SoC
    #     accuracy_decimals: 0
    #     unit_of_measurement: '%'
    #     filters:
    #       #- throttle: 5s
    #       #- debounce: 0.5s
    #       - delta: 1
    #     state_topic: ${prefix}/${subtopic}/00_SmartShunt/07_SoC

    #   #state_of_charge_bms
    #   - platform: mqtt_subscribe
    #     id: state_of_charge_bms
    #     name: "BMS 04_SoC"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/04_SoC
    #     accuracy_decimals: 0
    #     unit_of_measurement: '%'
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/04_SoC

    #   #capacity_remaining_ah
    #   - platform: mqtt_subscribe
    #     id: capacity_remaining_ah
    #     name: "BMS 12_Capacity_remaining"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/05_Capacity_remaining
    #     accuracy_decimals: 0
    #     unit_of_measurement: Ah
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/05_Capacity_remaining

    #   #battery_capacity
    #   - platform: mqtt_subscribe
    #     id: battery_capacity
    #     name: "BMS 06_Capacity_total"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/06_Capacity_total
    #     accuracy_decimals: 0
    #     unit_of_measurement: Ah
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/06_Capacity_total

    #   #charging_cycles
    #   - platform: mqtt_subscribe
    #     id: charging_cycles
    #     name: "BMS 07_Cycle_count"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/01_Battery/07_Cycle_count
    #     accuracy_decimals: 0
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/01_Battery/07_Cycle_count

    #     # total_charging_cycle_capacity:
    #     #   name: "${name} total charging cycle capacity"
    #     # total_runtime:
    #     #   name: "${name} total runtime"
    #     # balancing_current:
    #     #   name: "${name} balancing current"

    #   #errors_bitmask
    #   - platform: mqtt_subscribe
    #     id: errors_bitmask
    #     name: "BMS 03_BMS_Alerts bitmask"
    #     topic: PV/Batteries/JK_BMS${bmsnr}/99_Info/03_BMS_Alerts/bitmask
    #     accuracy_decimals: 0
    #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/99_Info/03_BMS_Alerts/bitmask

    #   # +--------------------------------------+
    #   # | Total Daily Energy                   |
    #   # +--------------------------------------+
    #   # BMS Daily Power
    #   # - platform: total_daily_energy
    #   #   name: "${name} Total Daily Energy"
    #   #   power_id: power
    #   #   unit_of_measurement: 'kWh'
    #   #   state_class: total_increasing
    #   #   device_class: energy
    #   #   accuracy_decimals: 3

    #   # BMS Daily Charging Power
    #   # - platform: total_daily_energy
    #   #   name: "${name} BMS Daily Charging Power"
    #   #   power_id: charging_power
    #   #   unit_of_measurement: 'kWh'
    #   #   state_class: total_increasing
    #   #   device_class: energy
    #   #   accuracy_decimals: 3
    #   #   filters:
    #   #     # Multiplication factor from W to kW is 0.001
    #   #     - multiply: 0.001

    #   # BMS Daily Discharging Power
    #   # - platform: total_daily_energy
    #   #   name: "${name} BMS Daily Discharging Power"
    #   #   power_id: discharging_power
    #   #   unit_of_measurement: 'kWh'
    #   #   state_class: total_increasing
    #   #   device_class: energy
    #   #   accuracy_decimals: 3
    #   #   filters:
    #   #     # Multiplication factor from W to kW is 0.001
    #   #     - multiply: 0.001
  # +--------------------------------------+
  # | Uptime sensor                        |
  # +--------------------------------------+
  # - platform: uptime INCLUDED in esp_basics.yaml                                          --> INCLUDED IN esp_basics.yaml
    # name: ${name} Uptime Sensor
    # id: uptime_sensor
    # update_interval: 60s
    # on_raw_value:
    #   then:
    #     - text_sensor.template.publish:
    #         id: uptime_human
    #         state: !lambda |-
    #           int seconds = round(id(uptime_sensor).raw_state);
    #           int days = seconds / (24 * 3600);
    #           seconds = seconds % (24 * 3600);
    #           int hours = seconds / 3600;
    #           seconds = seconds % 3600;
    #           int minutes = seconds /  60;
    #           seconds = seconds % 60;
    #           return (
    #             (days ? to_string(days) + "d " : "") +
    #             (hours ? to_string(hours) + "h " : "") +
    #             (minutes ? to_string(minutes) + "m " : "") +
    #             (to_string(seconds) + "s")
    #           ).c_str();
  # +--------------------------------------+
  # | Template sensor                      |
  # +--------------------------------------+
  # - platform: template                                                  --> MOVED TO sensors_global.yaml
    #   name: Requested Charge Voltage
    #   id: requested_charge_voltage
    #   unit_of_measurement: V
    #   device_class: voltage
    #   state_topic: ${prefix}/${subtopic}/01_Requested_Charge_Voltage
    # # +--------------------------------------+
    # # | Auto Charge Current Control          |
    # # +--------------------------------------+
    # # First, an initial charge current is calculated based upon the maximum cell voltage but only if the Auto Charge Current switch is enabled.
    # - platform: copy
    #   source_id: max_cell_voltage
    #   name: ${name} Initial Charge Current
    #   id: auto_charge_current_initial
    #   unit_of_measurement: A
    #   device_class: current
    #   internal: true  
    #   filters:
    #   - lambda: !lambda |-
    #             // Variables
    #             double cell_float_v = (id(float_voltage).state / id(cell_count).state);
    #             // Auto Charge Current function
    #             if (id(can_switch_auto_charge_current).state) {
    #               if (id(max_cell_voltage).state > id(cell_ovr).state) return 0.0;
    #               else return max(0.0,(- pow(${charge_a_factor_curve_end}, pow( max(0.0, ((x - cell_float_v) / (id(cell_ovr).state - cell_float_v))),${charge_a_factor_curve_shape}))+2) * id(charging_current).state);
    #             }
    #             else return id(charging_current).state;
    # # Second, an exponential moving average is calculated. This will be used to smooth the transition between different initial charge current values.
    # - platform: copy
    #   source_id: auto_charge_current_initial
    #   name: ${name} Moving Average Charge Current
    #   id:  auto_charge_current_moving_average
    #   unit_of_measurement: A
    #   device_class: current
    #   internal: true  
    #   filters:    
    #   - exponential_moving_average:
    #       alpha: 0.15
    #       send_every: 1
    #       send_first_at: 1
    # # Third, if the instantaneous initial charge current value is lower than the moving average, use that, otherwise use the moving average.
    # # This means that cell voltage spikes will be reacted to quickly, but reduced cell voltages will not, preventing oscillation of requested current.
    # - platform: copy
    #   source_id: auto_charge_current_initial
    #   name: Requested Charge Current
    #   id: auto_charge_current_final
    #   unit_of_measurement: A
    #   device_class: current
    #   accuracy_decimals: 1
    #   internal: false
    #   filters:
    #   - lambda: !lambda |-
    #             return (round(min(id(auto_charge_current_moving_average).state, x) * 10) / 10);
    #   state_topic: ${prefix}/${subtopic}/02_Requested_Charge_Current
      
    # # +--------------------------------------+
    # # | Auto Discharge Current Control       |
    # # +--------------------------------------+
    # # First, an initial discharge current is calculated based upon the minimum cell voltage but only if the Auto Discharge Current switch is enabled.
    # - platform: copy
    #   source_id: min_cell_voltage
    #   name: ${name} Initial Discharge Current
    #   id: auto_discharge_current_initial
    #   unit_of_measurement: A
    #   device_class: current
    #   internal: true  
    #   filters:
    #   - lambda: !lambda |-
    #             // Auto Discharge Current function
    #             if (id(can_switch_auto_discharge_current).state) {
    #               if (id(min_cell_voltage).state < id(cell_uvr).state) return 0.0;
    #               else return max(0.0,(- pow(${discharge_a_factor_curve_end}, pow( max(0.0, ((x - ${discharge_knee_v}) / (id(cell_uvr).state - ${discharge_knee_v}))),${discharge_a_factor_curve_shape}))+2) * id(discharging_current).state);
    #             }
    #             else return id(discharging_current).state;
    # # Second, an exponential moving average is calculated. This will be used to smooth the transition between different initial discharge current values.
    # - platform: copy
    #   source_id: auto_discharge_current_initial
    #   name: ${name} Moving Average Discharge Current
    #   id:  auto_discharge_current_moving_average
    #   unit_of_measurement: A
    #   device_class: current
    #   internal: true  
    #   filters:    
    #   - exponential_moving_average:
    #       alpha: 0.15
    #       send_every: 1
    #       send_first_at: 1
    # # Third, if the instantaneous initial discharge current value is lower than the moving average, use that, otherwise use the moving average.
    # # This means that cell voltage drops will be reacted to quickly, but increased cell voltages will not, preventing oscillation of requested current.
    # - platform: copy
    #   source_id: auto_discharge_current_initial
    #   name: Requested Discharge Current
    #   id: auto_discharge_current_final
    #   unit_of_measurement: A
    #   device_class: current
    #   accuracy_decimals: 1
    #   internal: false
    #   filters:
    #   - lambda: !lambda |-
    #             return (round(min(id(auto_discharge_current_moving_average).state, x) * 10) / 10);
    #   state_topic: ${prefix}/${subtopic}/03_Requested_Discharge_Current

#  # Adapted from number                                                --> MOVED TO sensor_jk_bms.yaml
  # #cell_count
  # - platform: mqtt_subscribe
  #   id: cell_count
  #   name: "BMS Cell Count"
  #   topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/11_cell_count
  #   filters:
  #     - delta: 1
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/98_BMS_Setup/11_cell_count

  # #cell_ovr
  # - platform: mqtt_subscribe
  #   id: cell_ovr
  #   name: "BMS Cell OVPR"
  #   topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/22_COVPR
  #   filters:
  #     - delta: 0.001
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/98_BMS_Setup/22_COVPR

  # #cell_uvr
  # - platform: mqtt_subscribe
  #   id: cell_uvr
  #   name: "BMS Cell UVPR"
  #   topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/23_CUVPR
  #   filters:
  #     - delta: 0.001
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/98_BMS_Setup/23_CUVPR

# switch:
#   # +--------------------------------------+
#   # | CAN switch Components                |
#   # +--------------------------------------+
#   # CAN charging Switch
#   - platform: template                                  --> MOVED TO sensors_global.yaml
#     name: "CAN 20_Charge enabled"
#     id: can_switch_charging
#     optimistic: true
#     restore_mode: RESTORE_DEFAULT_ON
#     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/20_Charging_enabled
#     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/20_Charging_enabled/set
#   # CAN discharging Switch
#   - platform: template
#     name: "CAN 21_Discharge enabled"
#     id: can_switch_discharging
#     optimistic: true
#     restore_mode: RESTORE_DEFAULT_ON
#     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/21_Discharging_enabled
#     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/21_Discharging_enabled/set
#   # CAN Top Balance Override
#   - platform: template
#     name: "CAN 23_Top_Balance_Override"
#     id: can_switch_force_bulk
#     optimistic: true
#     restore_mode: RESTORE_DEFAULT_OFF
#     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/23_Top_Balance_Override
#     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/23_Top_Balance_Override/set
#   # CAN Floatmode enable
#   - platform: template
#     name: "CAN 22_Floatmode_enabled"
#     id: can_switch_float
#     optimistic: true
#     restore_mode: RESTORE_DEFAULT_ON
#     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/22_Floatmode_enabled
#     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/22_Floatmode_enabled/set
#   # CAN Automatic Charge Current
#   - platform: template
#     name: CAN 24_Automatic Charge Current
#     id: can_switch_auto_charge_current
#     optimistic: true
#     restore_mode: RESTORE_DEFAULT_ON
#     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Charge_Current
#     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Charge_Current/set
#   # CAN Automatic Discharge Current
#   - platform: template
#     name: CAN 25_Automatic Discharge Current
#     id: can_switch_auto_discharge_current
#     optimistic: true
#     restore_mode: RESTORE_DEFAULT_ON
#     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Discharge_Current
#     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/24_Automatic_Discharge_Current/set

#   # +--------------------------------------+
#   # | Text sensors                         |
#   # +--------------------------------------+
# text_sensor:                                                                      ---> MOVED TO sensor_jk_bms-yaml
  # #BMS_Alerts
  # - platform: mqtt_subscribe
  #   name: "BMS 03_BMS_Alerts"
  #   topic: PV/Batteries/JK_BMS${bmsnr}/99_Info/03_BMS_Alerts
  #   state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/99_Info/03_BMS_Alerts

  # #total_runtime_formatted
  #     # total_runtime_formatted:
  #     #   name: "${name} total runtime formatted"

  # ### text sensor - switch_helper ####
  # - platform: mqtt_subscribe
  #   id: bms_switch_charging_helper
  #   name: BMS 03_Charge_MOS switch helper
  #   topic: PV/Batteries/JK_BMS${bmsnr}/03_Charge_MOS/01_Switch
  #   internal: true
  #   on_value:
  #     then:
  #       - lambda: |-
  #           if (x == "ON") {
  #             id(bms_switch_charging).publish_state(true);   
  #           } else {
  #             id(bms_switch_charging).publish_state(false);
  #           }
  #   #state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/03_Charge_MOS/01_Switch/helper
  # - platform: mqtt_subscribe
  #   name: BMS 04_Discharge_MOS switch helper
  #   id: bms_switch_discharging_helper
  #   topic: PV/Batteries/JK_BMS${bmsnr}/04_Discharge_MOS/01_Switch
  #   internal: true
  #   on_value:
  #     then:
  #       - lambda: |-
  #           if (x == "ON") {
  #             id(bms_switch_discharging).publish_state(true);   
  #           } else {
  #             id(bms_switch_discharging).publish_state(false);
  #           }
  #   #state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/04_Discharge_MOS/01_Switch/helper
  # - platform: mqtt_subscribe
  #   name: BMS 02_Balancing switch helper
  #   id: bms_switch_balancing_helper
  #   topic: PV/Batteries/JK_BMS${bmsnr}/02_Balancing/01_Switch
  #   internal: true
  #   on_value:
  #     then:
  #       - lambda: |-
  #           if (x == "ON") {
  #             id(bms_switch_balancing).publish_state(true);   
  #           } else {
  #             id(bms_switch_balancing).publish_state(false);
  #           }
  #   #state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/02_Balancing/01_Switch/helper

  # #### text sensor - state_helper ####
  # - platform: mqtt_subscribe
  #   id: bms_charging_state_helper
  #   name: BMS 03_Charge_MOS state helper
  #   topic: PV/Batteries/JK_BMS${bmsnr}/03_Charge_MOS
  #   internal: true
  #   on_value:
  #     then:
  #       - lambda: |-
  #           if (x == "ON") {
  #             id(charging_state).publish_state(true);              
  #           } else {
  #             id(charging_state).publish_state(false);
  #           }
  #   #state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/03_Charge_MOS/helper

  # - platform: mqtt_subscribe
  #   name: BMS 04_Discharge_MOS state helper
  #   id: bms_discharging_state_helper
  #   topic: PV/Batteries/JK_BMS${bmsnr}/04_Discharge_MOS
  #   internal: true
  #   on_value:
  #     then:
  #       - lambda: |-
  #           if (x == "ON") {
  #             id(discharging_state).publish_state(true);
  #           } else {
  #             id(discharging_state).publish_state(false);
  #           }
  #   #state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/04_Discharge_MOS/helper

  # - platform: mqtt_subscribe
  #   name: BMS 02_Balancing state helper
  #   id: bms_balancing_state_helper
  #   topic: PV/Batteries/JK_BMS${bmsnr}/02_Balancing
  #   internal: true
  #   on_value:
  #     then:
  #       - lambda: |-
  #           if (x == "ON") {
  #             id(equalizing_state).publish_state(true);
  #           } else {
  #             id(equalizing_state).publish_state(false);
  #           }
  #   #state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/02_Balancing/helper

  # +--------------------------------------+
  # | Template text sensors                |
  # +--------------------------------------+
  # - platform:                                                                         #template INCLUDED in esp_basics.yaml
  #   name: ${name} Uptime Human Readable
  #   id: uptime_human
  #   icon: mdi:clock-start

  # # Charge mode                                                                       # ---> MOVED TO sensors_global.yaml
  # - platform: template
  #   name: "ESP 99_Battery_Charge_Mode"
  #   id: charging_status
  #   state_topic: ${prefix}/${subtopic}/99_Battery_Charge_Mode
  #   update_interval: 60s

  # +--------------------------------------+
  # | Number sensors                       |
  # +--------------------------------------+

# number:
  #  Adapted to sensor
  #   cell_count
  #   - platform: mqtt_subscribe
  #     id: cell_count
  #     name: "BMS Cell Count"
  #     topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/11_cell_count
  #     filters:
  #       - delta: 1
  #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/12_cell_count

  #   total_battery_capacity:
  #     name: "${name} total battery capacity"
  #   cell_voltage_overvoltage_protection:
  #     id: cell_ovp
  #     name: "${name} cell voltage overvoltage protection"
  #   cell_voltage_overvoltage_recovery:

  #   cell_ovr
  #   - platform: mqtt_subscribe
  #     id: cell_ovr
  #     name: "BMS Cell OVPR"
  #     topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/22_COVPR
  #     filters:
  #       - delta: 0.001
  #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/22_COVPR

  #   cell_voltage_undervoltage_protection:
  #     id: cell_uvp
  #     name: "${name} cell voltage undervoltage protection"

  #   cell_uvr
  #   - platform: mqtt_subscribe
  #     id: cell_uvr
  #     name: "BMS Cell UVPR"
  #     topic: PV/Batteries/JK_BMS${bmsnr}/98_BMS_Setup/23_CUVPR
  #     filters:
  #       - delta: 0.001
  #     state_topic: ${prefix}/${subtopic}/0${bmsnr}_JK_BMS${bmsnr}/23_CUVPR

  #   balance_starting_voltage:
  #     name: "${name} balance starting voltage"
  #   voltage_calibration:
  #     name: "${name} voltage calibration"
  #   current_calibration:
  #     name: "${name} current calibration"
  #   power_off_voltage:
  #     name: "${name} power off voltage"
  #   max_balance_current:
  #     name: "${name} max balance current"
  #   max_charge_current:
  #     name: "${name} max charge current"
  #   max_discharge_current:
  #     name: "${name} max discharge current"

  #   # +--------------------------------------+
  #   # | Slider                               |
  #   # +--------------------------------------+                                          ---> MOVED TO sensors_global.yaml
  #   - platform: template
  #     name: "ESP 01_Bulk_Volt"
  #     id: "bulk_voltage"
  #     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/01_Bulk_Volt
  #     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/01_Bulk_Volt/set
  #     step: 0.1
  #     min_value: 52                                                                 #52.8
  #     max_value: 58                                                                 #57.6
  #     restore_value: true
  #     mode: box
  #     initial_value: "${bulk_v}"
  #     unit_of_measurement: V
  #     icon: mdi:battery-charging
  #     optimistic: true

  #   # float_voltage
  #   - platform: template
  #     name: "ESP 03_Float_Volt"
  #     id: "float_voltage"
  #     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/03_Float_Volt
  #     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/03_Float_Volt/set
  #     step: 0.1
  #     min_value: 52                                                                 #52.8
  #     max_value: 58                                                                 #57.6
  #     restore_value: true
  #     mode: box
  #     initial_value: "${float_v}"
  #     unit_of_measurement: V
  #     icon: mdi:battery-charging
  #     optimistic: true

  #   # rebulk voltage (old rebulk offset (obsolet))
  #   - platform: template
  #     name: "ESP 04_Rebulk_Volt"
  #     id: "rebulk_voltage"
  #     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/04_Rebulk_Voltage
  #     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/04_Rebulk_Voltage/set
  #     step: 0.1
  #     min_value: 51.2
  #     max_value: 53.6
  #     restore_value: true
  #     mode: box
  #     initial_value: "${rebulk_v}"
  #     unit_of_measurement: V
  #     icon: mdi:sine-wave
  #     optimistic: true

  #     # +--------------------------------------+
  #     # | absorption_offset                    |
  #     # +--------------------------------------+
  #   - platform: template
  #     name: "ESP 09_Absorbtion_Offset"
  #     id: "absorption_offset"
  #     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/09_Absorbtion_Offset
  #     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/09_Absorbtion_Offset/set
  #     step: 0.05
  #     min_value: 0
  #     max_value: 0.3
  #     restore_value: true
  #     mode: slider
  #     initial_value: 0.05
  #     unit_of_measurement: V
  #     icon: mdi:sine-wave
  #     optimistic: true

  #   # Charge_Current_max
  #   - platform: template
  #     name: "ESP 10_Charge_Current_max"
  #     id: "charging_current"
  #     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/10_Charge_Current_max
  #     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/10_Charge_Current_max/set
  #     step: 1
  #     min_value: 0
  #     max_value: "${charge_a}"
  #     #restore_value: true
  #     mode: slider
  #     initial_value: "${charge_a}"
  #     unit_of_measurement: A
  #     icon: mdi:current-dc
  #     optimistic: true
  #   # Disharge_Current_max
  #   - platform: template
  #     name: "ESP 11_Discharge_Current_max"
  #     id: "discharging_current"
  #     state_topic: ${prefix}/${subtopic}/90_Charge_Setup/11_Discharge_Current_max
  #     command_topic: ${prefix}/${subtopic}/90_Charge_Setup/11_Discharge_Current_max/set
  #     step: 1
  #     min_value: 0
  #     max_value: "${discharge_a}"
  #     #restore_value: true
  #     mode: slider
  #     initial_value: "${discharge_a}"
  #     unit_of_measurement: A
  #     icon: mdi:current-dc
  #     optimistic: true

# +--------------------------------------+
# | JK-BMS Buttons                       |
# +--------------------------------------+
# button:                                         #INCLUDED IN esp_basics.yaml
  # - platform: jk_bms_ble
  #   retrieve_settings:
  #     name: "${name} retrieve settings"
  #   retrieve_device_info:
  #     name: "${name} retrieve device info"


# +--------------------------------------+
# | Start CAN Handling                   |
# +--------------------------------------+
canbus: # 0x305 - Inverter ACK - SMA/LG/Pylon/Goodwe reply
  - platform: esp32_can
    tx_pin: ${can_tx_pin}
    rx_pin: ${can_rx_pin}
    can_id: 4
    bit_rate: 500kbps
    on_frame:
    - can_id: 0x305
      then:
        - light.toggle:
            id: blue_led
        - lambda: |-
            id(can_ack_counter) = 0;                              // Reset ACK counter
            id(can_bus_status).publish_state(true);               // Set CANBUS Status to ON

            ESP_LOGI("main", "received can id: 0x305 ACK");
